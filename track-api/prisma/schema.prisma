// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model Games {
  id           Int           @id @default(autoincrement())
  game_id      Int           @unique
  title        String
  description  String
  release_date ReleaseDate[]
  publisher    Publisher[]
  platform     Platform[]
  update_at    DateTime
  genre        Genre[]
  multiplayer  Boolean
  user_games   UserGames[]
  cover        String        @default("")
  thumbnail    String        @default("")
  userList     UserList[]
}

model ReleaseDate {
  id      Int      @id @default(autoincrement())
  date    DateTime
  game    Games[]
  game_id Int

  @@unique([game_id, date])
}

model Publisher {
  id         Int     @id @default(autoincrement())
  company_id Int
  name       String
  game       Games[]
  game_id    Int

  @@unique([game_id, name, company_id])
}

model Platform {
  id          Int     @id @default(autoincrement())
  platform_id Int
  name        String
  logo        String
  games       Games[]
  game_id     Int

  @@unique([game_id, name])
}

model Genre {
  id       Int     @id @default(autoincrement())
  genre_id Int
  name     String
  logo     String
  games    Games[]
  game_id  Int

  @@unique([game_id, name, genre_id])
}

model User {
  id         Int         @id @default(autoincrement())
  username   String      @unique @db.Citext
  bio        String?
  email      String      @unique @db.Citext
  password   String
  created_at DateTime    @default(now())
  updated_at DateTime    @default(now())
  is_active  Boolean     @default(false)
  avatar     String      @default("")
  user_games UserGames[]
  code       String      @default("")
  user_list  UserList[]
}

model UserGames {
  id        Int           @id @default(autoincrement())
  user      User          @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id   Int
  game      Games         @relation(fields: [game_id], references: [id])
  game_id   Int
  game_time UserGameTime?
  done      Boolean       @default(false)

  @@unique([user_id, game_id])
}

model UserGameTime {
  id            Int       @id @default(autoincrement())
  user_game     UserGames @relation(fields: [user_game_id], references: [id], onDelete: Cascade)
  user_game_id  Int
  main_story    Float?
  main_extra    Float?
  completionist Float?
  single_player Float?
  solo          Float?
  coOp          Float?
  all_styles    Float?

  @@unique([user_game_id])
}

model UserList {
  id              Int    @id @default(autoincrement())
  name            String
  backgroundColor String
  icon            String
  user            User   @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id         Int
  games           Games  @relation(fields: [games_id], references: [id])
  games_id        Int

  @@unique([user_id, name])
}
